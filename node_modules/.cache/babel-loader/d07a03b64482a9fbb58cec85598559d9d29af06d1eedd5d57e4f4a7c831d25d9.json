{"ast":null,"code":"var _jsxFileName = \"/Users/kirnendrasidhu/repos/quterus/quterus-frontend/src/pages/AiQuiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Quiz.css';\nimport { useState, useEffect } from 'react';\nimport uterusPic from '../assets/uterus-pic.png';\nimport AiCards from '../components/AiCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPT_API_KEY = \"\";\nconst AiQuiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    let ignore = false;\n    if (!ignore) callOpenAIAPI();\n    return () => {\n      ignore = true;\n    };\n  }, []);\n  async function callOpenAIAPI() {\n    console.log(\"Calling the OpenAI API\");\n    const APIBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"prompt\": 'I want a question on the topic of menstruation diseases, it should ask the question based on the symptoms and there should be four answer options, where one is correct. Answer in JSON format with unique ids: { topic: \"Menstrual-Cycle\", question: \"Question 1?\", answerOptions: [ { answerText: \"Answer 1\", isCorrect: true, _id: \"6497122d8b7852503441b051\"}, { answerText: \"Answer 2\", isCorrect: false, _id: \"6497122d8b7852503441b052\"}, { answerText: \"Answer 3\", isCorrect: false, _id: \"6497122d8b7852503441b053\"}, { answerText: \"Answer 1\", isCorrect: false, _id: \"6497122d8b7852503441b054\"} ], _id: \"6497122d8b7852503441b050\", __v: 0 }];'\n    };\n    await fetch(\"https://api.openai.com/v1/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + GPT_API_KEY\n      },\n      body: JSON.stringify(APIBody)\n    }).then(data => {\n      return data;\n    }).then(data => {\n      console.log(data);\n      setQuestions([data.json()]);\n    });\n  }\n  const cardChange = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    ;\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    ;\n  };\n  // react router for different pages\n  // api for chatgpt or google bard -> use for questions, may give weird results\n  // deploy with Computer Engine -> virtual machine -> use cloud run, app engine for easiest way to deploy (google for this)\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"qUterus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How well do you know the uterus?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"contentMain\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uterus-graphic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"bounce\",\n            id: \"uterus-pic\",\n            src: uterusPic,\n            alt: \"Girl in a jacket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: /*#__PURE__*/_jsxDEV(AiCards, {\n            questions: questions,\n            currentQuestion: currentQuestion,\n            showScore: showScore,\n            score: score,\n            cardChange: cardChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"topics\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Menstrual Cycle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Menstrual Cycle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"topic-buttons\",\n              children: \"Endometriosis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"topic-buttons\",\n              children: \"PCOS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"topic-buttons\",\n              children: \"PMDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"topic-buttons\",\n              children: \"Contraceptives\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"random\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Want more practice? Ask our AI Utera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"topic-buttons\",\n              children: \"Mesntruation Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AiQuiz, \"Vi12Lo2TDfnwjutFArqXoJ3fVH4=\");\n_c = AiQuiz;\nexport default AiQuiz;\nvar _c;\n$RefreshReg$(_c, \"AiQuiz\");","map":{"version":3,"names":["React","useState","useEffect","uterusPic","AiCards","jsxDEV","_jsxDEV","GPT_API_KEY","AiQuiz","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","ignore","callOpenAIAPI","console","log","APIBody","fetch","method","headers","body","JSON","stringify","then","data","json","cardChange","isCorrect","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirnendrasidhu/repos/quterus/quterus-frontend/src/pages/AiQuiz.js"],"sourcesContent":["import React from 'react';\nimport './Quiz.css';\nimport { useState, useEffect } from 'react';\nimport uterusPic from '../assets/uterus-pic.png';\nimport AiCards from '../components/AiCards';\n\nconst GPT_API_KEY = \"\"\n\nconst AiQuiz = () => {\n    const [questions, setQuestions] = useState([])\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n\n    useEffect(() => {\n        let ignore = false;\n        \n        if (!ignore)  callOpenAIAPI()\n        return () => { ignore = true; }\n        },[]);\n\n    async function callOpenAIAPI() {\n        console.log(\"Calling the OpenAI API\");\n\n        const APIBody = {\n            \"model\": \"gpt-3.5-turbo\",\n            \"prompt\": 'I want a question on the topic of menstruation diseases, it should ask the question based on the symptoms and there should be four answer options, where one is correct. Answer in JSON format with unique ids: { topic: \"Menstrual-Cycle\", question: \"Question 1?\", answerOptions: [ { answerText: \"Answer 1\", isCorrect: true, _id: \"6497122d8b7852503441b051\"}, { answerText: \"Answer 2\", isCorrect: false, _id: \"6497122d8b7852503441b052\"}, { answerText: \"Answer 3\", isCorrect: false, _id: \"6497122d8b7852503441b053\"}, { answerText: \"Answer 1\", isCorrect: false, _id: \"6497122d8b7852503441b054\"} ], _id: \"6497122d8b7852503441b050\", __v: 0 }];'\n        }\n        \n        await fetch(\"https://api.openai.com/v1/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + GPT_API_KEY\n            },\n            body: JSON.stringify(APIBody)\n        }).then((data) => {\n            return data;\n        }).then((data) => {\n            console.log(data);\n            setQuestions([data.json()])\n        });\n    }\n\n    const cardChange = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t};\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t};\n    }\n// react router for different pages\n// api for chatgpt or google bard -> use for questions, may give weird results\n// deploy with Computer Engine -> virtual machine -> use cloud run, app engine for easiest way to deploy (google for this)\n    return (\n    <body className=\"page\">\n        <header>\n            <h1>qUterus</h1>\n            <h2>How well do you know the uterus?</h2>\n        </header>\n        <div className=\"content\">\n            <main className=\"contentMain\">\n                <div className=\"uterus-graphic\"><img className=\"bounce\" id=\"uterus-pic\" src={uterusPic} alt=\"Girl in a jacket\"/></div>\n                <div className=\"cards\">\n                    <AiCards questions={questions} currentQuestion={currentQuestion} showScore={showScore} score={score} cardChange={cardChange}/>\n                </div>\n            </main>\n            <nav className=\"nav\">\n                <section className=\"topics\">\n                    <div className=\"Menstrual Cycle\">\n                        <h3>Menstrual Cycle</h3>\n                        <button id=\"topic-buttons\">Endometriosis</button>\n                        <button id=\"topic-buttons\">PCOS</button>\n                        <button id=\"topic-buttons\">PMDD</button>\n                        <button id=\"topic-buttons\">Contraceptives</button>\n                    </div>\n                    <div className=\"random\">\n                        <h3>Want more practice? Ask our AI Utera</h3>\n                        <button id=\"topic-buttons\">Mesntruation Questions</button>\n                    </div>\n                </section>\n            </nav>\n      </div>\n      <footer>Footer</footer>\n    </body>\n  );\n};\n\nexport default AiQuiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}