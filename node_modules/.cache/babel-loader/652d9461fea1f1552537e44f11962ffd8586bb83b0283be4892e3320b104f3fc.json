{"ast":null,"code":"var _jsxFileName = \"/Users/kirnendrasidhu/repos/quterus/quterus-frontend/src/components/AiCards.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AiCards = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: props.showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", props.score, \" out of \", props.questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", props.currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), \"/\", props.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: props.questions[props.currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: props.questions[props.currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.cardChange(answerOption.isCorrect),\n          children: answerOption.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = AiCards;\nCards.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    question: PropTypes.string.isRequired,\n    answerOptions: PropTypes.arrayOf(PropTypes.shape({\n      answerText: PropTypes.string.isRequired,\n      isCorrect: PropTypes.bool.isRequired\n    })).isRequired\n  })).isRequired,\n  score: PropTypes.number.isRequired,\n  cardChange: PropTypes.func.isRequired\n};\nexport default AiCards;\nvar _c;\n$RefreshReg$(_c, \"AiCards\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","AiCards","props","className","children","showScore","score","questions","length","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","question","answerOptions","map","answerOption","onClick","cardChange","isCorrect","answerText","_c","Cards","propTypes","arrayOf","shape","_id","number","isRequired","string","bool","func","$RefreshReg$"],"sources":["/Users/kirnendrasidhu/repos/quterus/quterus-frontend/src/components/AiCards.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Cards.css';\n\nconst AiCards = (props) => {\n    return (\n        <div className='card'>\n            {props.showScore ? (\n                <div className='score-section'>\n                    You scored {props.score} out of {props.questions.length}\n                </div>\n            ) : (\n                <>\n                    <div className='question-section'>\n                        <div className='question-count'>\n                            <span>Question {props.currentQuestion + 1}</span>/{props.questions.length}\n                        </div>\n                        <div className='question-text'>{props.questions[props.currentQuestion].question}</div>\n                    </div>\n                    <div className='answer-section'>\n                        {props.questions[props.currentQuestion].answerOptions.map((answerOption) => (\n                            <button onClick={() => props.cardChange(answerOption.isCorrect)}>{answerOption.answerText}</button>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nCards.propTypes = {\n    questions: PropTypes.arrayOf(\n        PropTypes.shape({\n          _id: PropTypes.number.isRequired,\n          question: PropTypes.string.isRequired,\n          answerOptions: PropTypes.arrayOf(\n            PropTypes.shape({\n                answerText: PropTypes.string.isRequired,\n                isCorrect: PropTypes.bool.isRequired\n            })\n          ).isRequired\n        })\n      ).isRequired,\n      score: PropTypes.number.isRequired,\n      cardChange: PropTypes.func.isRequired\n};\n\nexport default AiCards;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB,oBACIJ,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBF,KAAK,CAACG,SAAS,gBACZP,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,aAChB,EAACF,KAAK,CAACI,KAAK,EAAC,UAAQ,EAACJ,KAAK,CAACK,SAAS,CAACC,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,gBAENd,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACIN,OAAA;QAAKK,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BN,OAAA;UAAKK,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BN,OAAA;YAAAM,QAAA,GAAM,WAAS,EAACF,KAAK,CAACW,eAAe,GAAG,CAAC;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,KAAC,EAACV,KAAK,CAACK,SAAS,CAACC,MAAM;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNd,OAAA;UAAKK,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEF,KAAK,CAACK,SAAS,CAACL,KAAK,CAACW,eAAe,CAAC,CAACC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACNd,OAAA;QAAKK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC1BF,KAAK,CAACK,SAAS,CAACL,KAAK,CAACW,eAAe,CAAC,CAACE,aAAa,CAACC,GAAG,CAAEC,YAAY,iBACnEnB,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMhB,KAAK,CAACiB,UAAU,CAACF,YAAY,CAACG,SAAS,CAAE;UAAAhB,QAAA,EAAEa,YAAY,CAACI;QAAU;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CACrG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACU,EAAA,GAxBIrB,OAAO;AA0BbsB,KAAK,CAACC,SAAS,GAAG;EACdjB,SAAS,EAAEX,SAAS,CAAC6B,OAAO,CACxB7B,SAAS,CAAC8B,KAAK,CAAC;IACdC,GAAG,EAAE/B,SAAS,CAACgC,MAAM,CAACC,UAAU;IAChCf,QAAQ,EAAElB,SAAS,CAACkC,MAAM,CAACD,UAAU;IACrCd,aAAa,EAAEnB,SAAS,CAAC6B,OAAO,CAC9B7B,SAAS,CAAC8B,KAAK,CAAC;MACZL,UAAU,EAAEzB,SAAS,CAACkC,MAAM,CAACD,UAAU;MACvCT,SAAS,EAAExB,SAAS,CAACmC,IAAI,CAACF;IAC9B,CAAC,CACH,CAAC,CAACA;EACJ,CAAC,CACH,CAAC,CAACA,UAAU;EACZvB,KAAK,EAAEV,SAAS,CAACgC,MAAM,CAACC,UAAU;EAClCV,UAAU,EAAEvB,SAAS,CAACoC,IAAI,CAACH;AACjC,CAAC;AAED,eAAe5B,OAAO;AAAC,IAAAqB,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}