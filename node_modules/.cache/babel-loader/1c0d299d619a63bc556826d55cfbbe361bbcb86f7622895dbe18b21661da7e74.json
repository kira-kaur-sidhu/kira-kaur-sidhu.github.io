{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kirnendrasidhu/repos/quterus/quterus-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kirnendrasidhu/repos/quterus/quterus-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kirnendrasidhu/repos/quterus/quterus-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import'./Quiz.css';import{useState,useEffect}from'react';import uterusPic from'../assets/uterus-pic.png';import AiCards from'../components/AiCards';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GPT_API_KEY=\"\";var AiQuiz=function AiQuiz(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentQuestion=_useState4[0],setCurrentQuestion=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showScore=_useState6[0],setShowScore=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),score=_useState8[0],setScore=_useState8[1];useEffect(function(){var ignore=false;if(!ignore)callOpenAIAPI();return function(){ignore=true;};},[]);function callOpenAIAPI(){return _callOpenAIAPI.apply(this,arguments);}function _callOpenAIAPI(){_callOpenAIAPI=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var APIBody;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(\"Calling the OpenAI API\");APIBody={\"model\":\"gpt-3.5-turbo\",\"prompt\":'I want a question on the topic of menstruation diseases, it should ask the question based on the symptoms and there should be four answer options, where one is correct. Answer in JSON format with unique ids: { topic: \"Menstrual-Cycle\", question: \"Question 1?\", answerOptions: [ { answerText: \"Answer 1\", isCorrect: true, _id: \"6497122d8b7852503441b051\"}, { answerText: \"Answer 2\", isCorrect: false, _id: \"6497122d8b7852503441b052\"}, { answerText: \"Answer 3\", isCorrect: false, _id: \"6497122d8b7852503441b053\"}, { answerText: \"Answer 1\", isCorrect: false, _id: \"6497122d8b7852503441b054\"} ], _id: \"6497122d8b7852503441b050\", __v: 0 }];'};_context.next=4;return fetch(\"https://api.openai.com/v1/completions\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \"+GPT_API_KEY},body:JSON.stringify(APIBody)}).then(function(data){return data;}).then(function(data){console.log(data);setQuestions([data]);});case 4:case\"end\":return _context.stop();}},_callee);}));return _callOpenAIAPI.apply(this,arguments);}var cardChange=function cardChange(isCorrect){if(isCorrect){setScore(score+1);};var nextQuestion=currentQuestion+1;if(nextQuestion<questions.length){setCurrentQuestion(nextQuestion);}else{setShowScore(true);};};// react router for different pages\n// api for chatgpt or google bard -> use for questions, may give weird results\n// deploy with Computer Engine -> virtual machine -> use cloud run, app engine for easiest way to deploy (google for this)\nreturn/*#__PURE__*/_jsxs(\"body\",{className:\"page\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quterus\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"How well do you know the uterus?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"main\",{className:\"contentMain\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"uterus-graphic\",children:/*#__PURE__*/_jsx(\"img\",{className:\"bounce\",id:\"uterus-pic\",src:uterusPic,alt:\"Girl in a jacket\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"cards\",children:/*#__PURE__*/_jsx(AiCards,{questions:questions,currentQuestion:currentQuestion,showScore:showScore,score:score,cardChange:cardChange})})]}),/*#__PURE__*/_jsx(\"nav\",{className:\"nav\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"topics\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Menstrual Cycle\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Menstrual Cycle\"}),/*#__PURE__*/_jsx(\"button\",{id:\"topic-buttons\",children:\"Endometriosis\"}),/*#__PURE__*/_jsx(\"button\",{id:\"topic-buttons\",children:\"PCOS\"}),/*#__PURE__*/_jsx(\"button\",{id:\"topic-buttons\",children:\"PMDD\"}),/*#__PURE__*/_jsx(\"button\",{id:\"topic-buttons\",children:\"Contraceptives\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"random\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Want more practice? Ask our AI Utera\"}),/*#__PURE__*/_jsx(\"button\",{id:\"topic-buttons\",children:\"Mesntruation Questions\"})]})]})})]}),/*#__PURE__*/_jsx(\"footer\",{children:\"Footer\"})]});};export default AiQuiz;","map":{"version":3,"names":["React","useState","useEffect","uterusPic","AiCards","jsx","_jsx","jsxs","_jsxs","GPT_API_KEY","AiQuiz","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","showScore","setShowScore","_useState7","_useState8","score","setScore","ignore","callOpenAIAPI","_callOpenAIAPI","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","APIBody","wrap","_callee$","_context","prev","next","console","log","fetch","method","headers","body","JSON","stringify","then","data","stop","cardChange","isCorrect","nextQuestion","length","className","children","id","src","alt"],"sources":["/Users/kirnendrasidhu/repos/quterus/quterus-frontend/src/pages/AiQuiz.js"],"sourcesContent":["import React from 'react';\nimport './Quiz.css';\nimport { useState, useEffect } from 'react';\nimport uterusPic from '../assets/uterus-pic.png';\nimport AiCards from '../components/AiCards';\n\nconst GPT_API_KEY = \"\"\n\nconst AiQuiz = () => {\n    const [questions, setQuestions] = useState([])\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n\n    useEffect(() => {\n        let ignore = false;\n        \n        if (!ignore)  callOpenAIAPI()\n        return () => { ignore = true; }\n        },[]);\n\n    async function callOpenAIAPI() {\n        console.log(\"Calling the OpenAI API\");\n\n        const APIBody = {\n            \"model\": \"gpt-3.5-turbo\",\n            \"prompt\": 'I want a question on the topic of menstruation diseases, it should ask the question based on the symptoms and there should be four answer options, where one is correct. Answer in JSON format with unique ids: { topic: \"Menstrual-Cycle\", question: \"Question 1?\", answerOptions: [ { answerText: \"Answer 1\", isCorrect: true, _id: \"6497122d8b7852503441b051\"}, { answerText: \"Answer 2\", isCorrect: false, _id: \"6497122d8b7852503441b052\"}, { answerText: \"Answer 3\", isCorrect: false, _id: \"6497122d8b7852503441b053\"}, { answerText: \"Answer 1\", isCorrect: false, _id: \"6497122d8b7852503441b054\"} ], _id: \"6497122d8b7852503441b050\", __v: 0 }];'\n        }\n        \n        await fetch(\"https://api.openai.com/v1/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + GPT_API_KEY\n            },\n            body: JSON.stringify(APIBody)\n        }).then((data) => {\n            return data;\n        }).then((data) => {\n            console.log(data);\n            setQuestions([data])\n        });\n    }\n\n    const cardChange = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t};\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t};\n    }\n// react router for different pages\n// api for chatgpt or google bard -> use for questions, may give weird results\n// deploy with Computer Engine -> virtual machine -> use cloud run, app engine for easiest way to deploy (google for this)\n    return (\n    <body className=\"page\">\n        <header>\n            <h1>Quterus</h1>\n            <h2>How well do you know the uterus?</h2>\n        </header>\n        <div className=\"content\">\n            <main className=\"contentMain\">\n                <div className=\"uterus-graphic\"><img className=\"bounce\" id=\"uterus-pic\" src={uterusPic} alt=\"Girl in a jacket\"/></div>\n                <div className=\"cards\">\n                    <AiCards questions={questions} currentQuestion={currentQuestion} showScore={showScore} score={score} cardChange={cardChange}/>\n                </div>\n            </main>\n            <nav className=\"nav\">\n                <section className=\"topics\">\n                    <div className=\"Menstrual Cycle\">\n                        <h3>Menstrual Cycle</h3>\n                        <button id=\"topic-buttons\">Endometriosis</button>\n                        <button id=\"topic-buttons\">PCOS</button>\n                        <button id=\"topic-buttons\">PMDD</button>\n                        <button id=\"topic-buttons\">Contraceptives</button>\n                    </div>\n                    <div className=\"random\">\n                        <h3>Want more practice? Ask our AI Utera</h3>\n                        <button id=\"topic-buttons\">Mesntruation Questions</button>\n                    </div>\n                </section>\n            </nav>\n      </div>\n      <footer>Footer</footer>\n    </body>\n  );\n};\n\nexport default AiQuiz;"],"mappings":"8aAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,YAAY,CACnB,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,SAAS,KAAM,0BAA0B,CAChD,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,GAAM,CAAAC,WAAW,CAAG,EAAE,CAEtB,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACjB,IAAAC,SAAA,CAAkCV,QAAQ,CAAC,EAAE,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B,IAAAI,UAAA,CAA8Cf,QAAQ,CAAC,CAAC,CAAC,CAAAgB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAlDE,eAAe,CAAAD,UAAA,IAAEE,kBAAkB,CAAAF,UAAA,IAC1C,IAAAG,UAAA,CAAkCnB,QAAQ,CAAC,KAAK,CAAC,CAAAoB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA1CE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAC9B,IAAAG,UAAA,CAA0BvB,QAAQ,CAAC,CAAC,CAAC,CAAAwB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA9BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtBvB,SAAS,CAAC,UAAM,CACZ,GAAI,CAAA0B,MAAM,CAAG,KAAK,CAElB,GAAI,CAACA,MAAM,CAAGC,aAAa,CAAC,CAAC,CAC7B,MAAO,WAAM,CAAED,MAAM,CAAG,IAAI,CAAE,CAAC,CAC/B,CAAC,CAAC,EAAE,CAAC,CAAC,QAEK,CAAAC,aAAaA,CAAA,SAAAC,cAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,eAAA,EAAAA,cAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA5B,SAAAC,QAAA,MAAAC,OAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACIC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAE/BP,OAAO,CAAG,CACZ,OAAO,CAAE,eAAe,CACxB,QAAQ,CAAE,4nBACd,CAAC,CAAAG,QAAA,CAAAE,IAAA,SAEK,CAAAG,KAAK,CAAC,uCAAuC,CAAE,CACjDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,SAAS,CAAGtC,WACjC,CAAC,CACDuC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACb,OAAO,CAChC,CAAC,CAAC,CAACc,IAAI,CAAC,SAACC,IAAI,CAAK,CACd,MAAO,CAAAA,IAAI,CACf,CAAC,CAAC,CAACD,IAAI,CAAC,SAACC,IAAI,CAAK,CACdT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC,CACjBrC,YAAY,CAAC,CAACqC,IAAI,CAAC,CAAC,CACxB,CAAC,CAAC,yBAAAZ,QAAA,CAAAa,IAAA,MAAAjB,OAAA,GACL,UAAAN,cAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,GAAM,CAAAsB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,SAAS,CAAK,CACpC,GAAIA,SAAS,CAAE,CACd5B,QAAQ,CAACD,KAAK,CAAG,CAAC,CAAC,CACpB,CAAC,CAED,GAAM,CAAA8B,YAAY,CAAGtC,eAAe,CAAG,CAAC,CACxC,GAAIsC,YAAY,CAAG1C,SAAS,CAAC2C,MAAM,CAAE,CACpCtC,kBAAkB,CAACqC,YAAY,CAAC,CACjC,CAAC,IAAM,CACNjC,YAAY,CAAC,IAAI,CAAC,CACnB,CAAC,CACC,CAAC,CACL;AACA;AACA;AACI,mBACAf,KAAA,SAAMkD,SAAS,CAAC,MAAM,CAAAC,QAAA,eAClBnD,KAAA,WAAAmD,QAAA,eACIrD,IAAA,OAAAqD,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBrD,IAAA,OAAAqD,QAAA,CAAI,kCAAgC,CAAI,CAAC,EACrC,CAAC,cACTnD,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAC,QAAA,eACpBnD,KAAA,SAAMkD,SAAS,CAAC,aAAa,CAAAC,QAAA,eACzBrD,IAAA,QAAKoD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAACrD,IAAA,QAAKoD,SAAS,CAAC,QAAQ,CAACE,EAAE,CAAC,YAAY,CAACC,GAAG,CAAE1D,SAAU,CAAC2D,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAK,CAAC,cACtHxD,IAAA,QAAKoD,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClBrD,IAAA,CAACF,OAAO,EAACU,SAAS,CAAEA,SAAU,CAACI,eAAe,CAAEA,eAAgB,CAACI,SAAS,CAAEA,SAAU,CAACI,KAAK,CAAEA,KAAM,CAAC4B,UAAU,CAAEA,UAAW,CAAC,CAAC,CAC7H,CAAC,EACJ,CAAC,cACPhD,IAAA,QAAKoD,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBnD,KAAA,YAASkD,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACvBnD,KAAA,QAAKkD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BrD,IAAA,OAAAqD,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBrD,IAAA,WAAQsD,EAAE,CAAC,eAAe,CAAAD,QAAA,CAAC,eAAa,CAAQ,CAAC,cACjDrD,IAAA,WAAQsD,EAAE,CAAC,eAAe,CAAAD,QAAA,CAAC,MAAI,CAAQ,CAAC,cACxCrD,IAAA,WAAQsD,EAAE,CAAC,eAAe,CAAAD,QAAA,CAAC,MAAI,CAAQ,CAAC,cACxCrD,IAAA,WAAQsD,EAAE,CAAC,eAAe,CAAAD,QAAA,CAAC,gBAAc,CAAQ,CAAC,EACjD,CAAC,cACNnD,KAAA,QAAKkD,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnBrD,IAAA,OAAAqD,QAAA,CAAI,sCAAoC,CAAI,CAAC,cAC7CrD,IAAA,WAAQsD,EAAE,CAAC,eAAe,CAAAD,QAAA,CAAC,wBAAsB,CAAQ,CAAC,EACzD,CAAC,EACD,CAAC,CACT,CAAC,EACP,CAAC,cACNrD,IAAA,WAAAqD,QAAA,CAAQ,QAAM,CAAQ,CAAC,EACnB,CAAC,CAEX,CAAC,CAED,cAAe,CAAAjD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}